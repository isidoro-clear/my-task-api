openapi: 3.0.0
info:
  title: My Task API
  version: 1.0.0
tags:
  - name: tasks
    description: Operations about tasks
  - name: users
    description: Operations about users
  - name: teams
    description: Operations about teams
  - name: team_members
    description: Operations about team members
  - name: team_invitations
    description: Operations about team invitations
paths:
  /tasks:
    get:
      summary: Get all tasks
      tags:
        - tasks
      security:
        - JWT: []
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Task'
    post:
      summary: Create a task
      tags:
        - tasks
      security:
        - JWT: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Task'
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Task'
  /tasks/{id}:
    get:
      summary: Get a task by ID
      tags:
        - tasks
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
          description: The task ID
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Task'
    put:
      summary: Update a task by ID
      tags:
        - tasks
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
          description: The task ID
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Task'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Task'
    delete:
      summary: Delete a task by ID
      tags:
        - tasks
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
          description: The task ID
      responses:
        '204':
          description: No Content
  /signup:
    post:
      summary: Create a user
      tags:
        - users
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
  /signin:
    post:
      summary: Sign in
      tags:
        - users
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                password:
                  type: string
              required:
                - email
                - password
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  token:
                    type: string
        '401':
          description: Unauthorized
  /me:
    get:
      summary: Get my user information
      tags:
        - users
      security:
        - JWT: []
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
  /users/{id}:
    put:
      summary: Update a user by ID
      tags:
        - users
      security:
        - JWT: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
          description: The user ID
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
    delete:
      summary: Delete a user by ID
      tags:
        - users
      security:
        - JWT: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
          description: The user ID
      responses:
        '204':
          description: No Content
  /teams:
    get:
      summary: Get all teams
      tags:
        - teams
      security:
        - JWT: []
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Team'
    post:
      summary: Create a team
      tags:
        - teams
      security:
        - JWT: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Team'
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Team'
  /teams/{id}:
    get:
      summary: Get a team by ID
      tags:
        - teams
      security:
        - JWT: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
          description: The team ID
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Team'
    put:
      summary: Update a team by ID
      tags:
        - teams
      security:
        - JWT: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
          description: The team ID
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Team'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Team'
    delete:
      summary: Delete a team by ID
      tags:
        - teams
      security:
        - JWT: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
          description: The team ID
      responses:
        '204':
          description: No Content
  /team_members:
    get:
      summary: Get all team members
      tags:
        - team_members
      security:
        - JWT: []
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/TeamMember'
    post:
      summary: Add a team member
      tags:
        - team_members
      security:
        - JWT: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TeamMember'
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TeamMember'
  /team_members/{id}:
    get:
      summary: Get a team member by ID
      tags:
        - team_members
      security:
        - JWT: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
          description: The team member ID
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TeamMember'
    put:
      summary: Update a team member by ID
      tags:
        - team_members
      security:
        - JWT: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
          description: The team member ID
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TeamMember'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TeamMember'
    delete:
      summary: Delete a team member by ID
      tags:
        - team_members
      security:
        - JWT: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
          description: The team member ID
      responses:
        '204':
          description: No Content
  /team_invitations:
    get:
      summary: Get all team invitations
      tags:
        - team_invitations
      security:
        - JWT: []
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/TeamInvitation'
    post:
      summary: Invite a user to a team
      tags:
        - team_invitations
      security:
        - JWT: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TeamInvitation'
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TeamInvitation'
  /team_invitations/{id}:
    get:
      summary: Get a team invitation by ID
      tags:
        - team_invitations
      security:
        - JWT: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
          description: The team invitation ID
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TeamInvitation'
    put:
      summary: Update a team invitation by ID
      tags:
        - team_invitations
      security:
        - JWT: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
          description: The team invitation ID
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TeamInvitation'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TeamInvitation'
    delete:
      summary: Delete a team invitation by ID
      tags:
        - team_invitations
      security:
        - JWT: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
          description: The team invitation ID
      responses:
        '204':
          description: No Content
  /team_invitations/{id}/accept:
    get:
      summary: Accept a team invitation
      tags:
        - team_invitations
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
          description: The team invitation ID
      responses:
        '204':
          description: No Content
components:
  securitySchemes:
    JWT:
      type: "apiKey"
      in: "header"
      name: "Authorization"
  schemas:
    Task:
      type: object
      properties:
        id:
          type: integer
        title:
          type: string
        description:
          type: string
        completed:
          type: boolean
        user_id:
          type: integer
      required:
        - title
        - description
        - user_id
    User:
      type: object
      properties:
        id:
          type: integer
        first_name:
          type: string
        last_name:
          type: string
        email:
          type: string
        password:
          type: string
      required:
        - first_name
        - last_name
        - email
        - password
    Team:
      type: object
      properties:
        id:
          type: integer
        name:
          type: string
        description:
          type: string
        user_id:
          type: integer
      required:
        - name
        - description
        - user_id
    TeamMember:
      type: object
      properties:
        id:
          type: integer
        role:
          type: string
        team_id:
          type: integer
        user_id:
          type: integer
      required:
        - team_id
        - user_id
        - role
    TeamInvitation:
      type: object
      properties:
        id:
          type: integer
        team_id:
          type: integer
        email:
          type: string
        status:
          type: string
      required:
        - team_id
        - email
    